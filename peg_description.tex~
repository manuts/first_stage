\subsection{Construction of Parity Check Matrix using Progressive Edge Growth}
In this section, we discuss the progressive edge growth (PEG) method for the construction of regular and irregular LDPC code. 
A bipartite graph can be described using variable nodes, check nodes and set of edges $E$. In this method, edges between variable nodes and check nodes are 
established in a progressive manner. For given variable node, an edge connects the one of the check node such that girth is maximum. 
Thus, PEG algorithm has large girth when compared to codes constructed using random methods. 
Hence, code constructed using PEG algorithm has low error floor in comparison with code constructed using random methods.
\quad \\
Let us denote the variable nodes by $x_i, i \in \lbrace 1, 2, \cdots, n\rbrace$  and denote the check nodes by $f_i, i \in \lbrace 1, 2, \cdots, m\rbrace$ 
For a given variable node $x_i$ denote the check nodes reachable by breadth first search of up-to $l$ layers as $\mathcal{N}_{x_i}^l$. Let us denote it's complement 
as ${\bar{\mathcal{N}}_{x_i}^l}$.
Let us describe variable node degree sequence as follow:
\begin{equation*}
 D_x=\{{d_x}_1,{d_x}_2,\cdots,{d_x}_n\},~ {d_x}_1 \leq {d_x}_2 \leq \cdots \leq {d_x}_n
\end{equation*}
Where ${d_x}_i$ presents the degree of $i^{th}$ variable node $x_i$.
\begin{algorithm}[H]
\caption{Progressive Edge Growth Algorithm\cite{peg}}
\label{peg_algo}
%\algsetup{indent=2em}
\begin{algorithmic}[1]
\State \textbf{Input:} sequence $D_x$
\State \textbf{Output:} parity check matrix $\mathbf{H}$
\State initialize all check nodes with degree $0$
\For{$i=1$ to $n$}
\For{$j=1$ to ${d_x}_i$}
\If{$j=1$}
\State Put an edge between $f_k$ and $x_i$ where $f_k$ the check node with smallest degree.
\Else
\State Expand the graph from $x_i$ up-to $l$ layers such that either the cardinality of $\mathcal{N}_{x_i}^l$ stops \\
\quad \quad \quad \quad \quad growing, or ${\bar{\mathcal{N}}_{x_i}^l} \ne \Phi$ and ${\bar{\mathcal{N}}_{x_i}^{l+1}} = \Phi$. Then add an edge between $f_k$ and $x_i$ where $f_k$ \\ 
\quad \quad \quad \quad \quad is the node with minimum degree in ${\bar{\mathcal{N}}_{x_i}^l}$
\EndIf
\EndFor
\EndFor
\end{algorithmic}
\end{algorithm}
Check node degree distribution obtained using Algorithm \ref{peg_algo} is almost uniform. Whenever multiple choices are available to 
pick check node from set ${\bar{\mathcal{N}}_{x_i}^l}$, we can pick any check node from set ${\bar{\mathcal{N}}_{x_i}^l}$. 